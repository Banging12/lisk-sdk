// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`sign getSigningBytes should return transaction bytes for given asset 1`] = `
Object {
  "data": Array [
    8,
    2,
    16,
    0,
    24,
    1,
    32,
    128,
    173,
    226,
    4,
    42,
    32,
    241,
    185,
    244,
    238,
    113,
    181,
    213,
    133,
    125,
    59,
    52,
    109,
    68,
    28,
    169,
    103,
    242,
    120,
    112,
    235,
    238,
    136,
    86,
    157,
    179,
    100,
    253,
    19,
    226,
    138,
    219,
    163,
    50,
    33,
    8,
    128,
    250,
    191,
    166,
    178,
    182,
    143,
    7,
    18,
    20,
    58,
    151,
    31,
    208,
    43,
    74,
    7,
    252,
    32,
    170,
    209,
    147,
    109,
    60,
    177,
    210,
    99,
    185,
    110,
    15,
    26,
    0,
  ],
  "type": "Buffer",
}
`;

exports[`sign signTransaction should return signed transaction for given asset schema 1`] = `
Object {
  "asset": Object {
    "amount": 4008489300000000n,
    "data": "",
    "recipientAddress": Object {
      "data": Array [
        58,
        151,
        31,
        208,
        43,
        74,
        7,
        252,
        32,
        170,
        209,
        147,
        109,
        60,
        177,
        210,
        99,
        185,
        110,
        15,
      ],
      "type": "Buffer",
    },
  },
  "assetID": 0,
  "fee": 10000000n,
  "id": Object {
    "data": Array [
      7,
      53,
      247,
      171,
      90,
      170,
      50,
      255,
      24,
      125,
      103,
      145,
      62,
      58,
      126,
      10,
      65,
      97,
      97,
      191,
      139,
      87,
      212,
      58,
      75,
      155,
      47,
      247,
      138,
      66,
      85,
      220,
    ],
    "type": "Buffer",
  },
  "moduleID": 2,
  "nonce": 1n,
  "senderPublicKey": Object {
    "data": Array [
      241,
      185,
      244,
      238,
      113,
      181,
      213,
      133,
      125,
      59,
      52,
      109,
      68,
      28,
      169,
      103,
      242,
      120,
      112,
      235,
      238,
      136,
      86,
      157,
      179,
      100,
      253,
      19,
      226,
      138,
      219,
      163,
    ],
    "type": "Buffer",
  },
  "signatures": Array [
    Object {
      "data": Array [
        150,
        207,
        202,
        75,
        137,
        121,
        185,
        137,
        101,
        128,
        7,
        1,
        250,
        59,
        184,
        109,
        17,
        223,
        220,
        54,
        178,
        82,
        20,
        180,
        235,
        18,
        116,
        146,
        154,
        226,
        151,
        6,
        4,
        239,
        242,
        20,
        127,
        131,
        63,
        224,
        55,
        174,
        94,
        244,
        204,
        128,
        97,
        103,
        86,
        106,
        29,
        217,
        200,
        194,
        163,
        211,
        0,
        56,
        122,
        174,
        89,
        125,
        242,
        10,
      ],
      "type": "Buffer",
    },
  ],
}
`;

exports[`sign signTransactionWithPrivateKey should return signed transaction for given asset schema 1`] = `
Object {
  "asset": Object {
    "amount": 4008489300000000n,
    "data": "",
    "recipientAddress": Object {
      "data": Array [
        58,
        151,
        31,
        208,
        43,
        74,
        7,
        252,
        32,
        170,
        209,
        147,
        109,
        60,
        177,
        210,
        99,
        185,
        110,
        15,
      ],
      "type": "Buffer",
    },
  },
  "assetID": 0,
  "fee": 10000000n,
  "id": Object {
    "data": Array [
      92,
      157,
      45,
      219,
      231,
      117,
      166,
      36,
      174,
      143,
      229,
      2,
      82,
      252,
      218,
      51,
      135,
      153,
      90,
      252,
      248,
      110,
      14,
      149,
      210,
      141,
      110,
      19,
      4,
      202,
      152,
      170,
    ],
    "type": "Buffer",
  },
  "moduleID": 2,
  "nonce": 1n,
  "senderPublicKey": Object {
    "data": Array [
      241,
      185,
      244,
      238,
      113,
      181,
      213,
      133,
      125,
      59,
      52,
      109,
      68,
      28,
      169,
      103,
      242,
      120,
      112,
      235,
      238,
      136,
      86,
      157,
      179,
      100,
      253,
      19,
      226,
      138,
      219,
      163,
    ],
    "type": "Buffer",
  },
  "signatures": Array [
    Object {
      "data": Array [
        205,
        195,
        227,
        198,
        73,
        136,
        175,
        15,
        44,
        126,
        67,
        37,
        71,
        237,
        11,
        99,
        4,
        39,
        188,
        229,
        156,
        181,
        13,
        162,
        179,
        119,
        150,
        24,
        221,
        104,
        192,
        45,
        7,
        156,
        62,
        173,
        91,
        222,
        19,
        139,
        244,
        231,
        215,
        206,
        125,
        35,
        107,
        242,
        104,
        111,
        70,
        180,
        167,
        148,
        174,
        240,
        72,
        153,
        111,
        221,
        202,
        221,
        57,
        14,
      ],
      "type": "Buffer",
    },
  ],
}
`;

exports[`sign when running scenario "multisignature_registration_transaction" Both mandatory and optional member group should have correct signatures 1`] = `[Function]`;

exports[`sign when running scenario "multisignature_registration_transaction" Only mandatory members should have correct signatures 1`] = `[Function]`;

exports[`sign when running scenario "multisignature_registration_transaction" Only optional members should have correct signatures 1`] = `[Function]`;

exports[`sign when running scenario "multisignature_registration_transaction" Second signature case should have correct signatures 1`] = `[Function]`;

exports[`sign when running scenario "multisignature_registration_transaction" Sender is a member of the group should have correct signatures 1`] = `[Function]`;
